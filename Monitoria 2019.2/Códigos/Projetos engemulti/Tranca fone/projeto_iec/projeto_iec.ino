//       =========================================================================================
//       == TRABALHO DE IEC - 1° SEM - ENGENHARIA DE COMPUTAÇAO - UNIVERSIDADE FEDERAL DE GOIAS ==
//       ==                               PROJETO |||TRANCA FONE|||                             ==
//       ==                   ESCRITO POR ALUNO RAONI DOS REIS MIRANDA BARROS                   ==
//       =========================================================================================



//--------------INCLUSAO DAS BIBLIOTECAS--------------------------------------------------------------------------------------

#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>
#include <Servo.h>

//--------------DECLARAÇAO DO LCD--------------------------------------------------------------------------------------------

Adafruit_PCD8544 display = Adafruit_PCD8544(8, 9, 10, 11, 12);


//--------------DECLARACAO DO SERVO MOTOR----------------------------------------------------------------------------------------------

Servo trinca; 


//--------------DECLARAÇAO DE VARIAVEIS:------------------------------------------------------------------------------------------------

//----------------------SERVO-----------------------------------------------------------------------------------------------------------
int servo = 11, aberto = 0, fechado = 90;
//-----------------------LCD------------------------------------------------------------------------------------------------------------
int contraste = 70,  ledtela = 8, estadoled = 1;
//-----------------------LED------------------------------------------------------------------------------------------------------------
int ledvermelho = 12, ledverde = 13;
//--------------------VIBRACALL---------------------------------------------------------------------------------------------------------
int estadovibracall = 0, vibracall = 9;
//-----------------------SOM------------------------------------------------------------------------------------------------------------
int som = 10, estadosom = 0;
//----------------------BOTOES----------------------------------------------------------------------------------------------------------
int pagina = 0, posicaocursor = 1, cima = 0, baixo = 2, ok = 1, trocamenu = 0;
//-----------------CONTROLE DE TEMPO----------------------------------------------------------------------------------------------------
int tempologo = 2000, tempobotao = 300, tempointervalomanual, horas = 0 ,minutos = 0,  tempodeintervalologo = 1000, intervalomanual = 5;
long intervalopomodoro = 10000, deltat = 0 ,tempomanual, tempopomodoro = 10000;                  // TEMPO CORRETO DO POMODORO =  1500000
//--------------------AUXILIARES--------------------------------------------------------------------------------------------------------
int z=0, i=0,j=0;   
//------------RESUMO DOS PINOS NO ARDUINO:--------------------------------------------------------------------------------------------------------
//PINOS: 0 - cima
//PINOS: 1 - ok
//PINOS: 2 - baixo
//PINOS: 3 - LCD
//PINOS: 4 - LCD
//PINOS: 5 - LCD
//PINOS: 6 - LCD
//PINOS: 7 - LCD
//PINOS: 8 - ledtela
//PINOS: 9 - vibracall
//PINOS:10 - som
//PINOS:11 - servo
//PINOS:12 - ledvermelho
//PINOS:13 - ledverde

// ****************************************EH NECESSARIO AJUSTAR TODOS OS TEMPOS PARA O PROJETO FINAL!!!******************************************************

//--------------DECLARACAO DAS IMAGENS UFG E EMC----------------------------------------------------------------------------------------

/*PARA CRIAR O CODIGO DESSAS IMAGENS EH NECESSARIO VERIFICAR AS INSTRUCOES NO SITE
https://lastminuteengineers.com/nokia-5110-lcd-arduino-tutorial/ ONDE SE ENSINA COMO 
USAR CORRETAMENTE O LCD DA NOKIA, E TAMBEM FAZER AS CONVERSOES DE IMAGEM PARA BMP 
84X48 E APOS PARA O CODIGO HEXADECIMAL COMO APRSENTADO ABAIXO. A CONVERSAO DA IMAGEM
EH FEITA NO SITE http://javl.github.io/image2cpp/ . BASICAMENTE, UTILIZOU-SE O GIMP
PARA REDIMENSIONAR QUALQUER IMAGEM PARA O TAMANHO 84X48 (MEDIDA NECESSARIA DEVIDO AO 
TAMANHO DO LCD DA NOKIA), INDEXAR A MIAGEM PARA 1 BIT POR PIXEL E EXPORTAR NO FORMATO 
BMP. APOS ISSO, ACESSA-SE O ULTIMO  SITE MENCIONADO PARA PROCEDER A CONVERSAO. EH 
IMPORTANTE SEGUIR OS PARAMETROS DE CONVERSAO EXPLICADOS NO PRIMEIRO SITE.*/

// IMAGEM EXADECIMAL LOGO 'ufg', 84x48px
const unsigned char ufg [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x61, 0xff, 0xe0, 0xf0, 0x0f, 0x0f, 0xff, 0x00, 0xff, 0xc0, 0x00, 0xf9, 0xff, 0xe0, 0xf0, 0x0f, 
  0x0f, 0xff, 0x03, 0xff, 0xc0, 0x01, 0xf9, 0xff, 0xe0, 0xf0, 0x0f, 0x0f, 0xff, 0x07, 0xff, 0xc0, 
  0x01, 0xf9, 0xff, 0xe0, 0xf0, 0x0f, 0x0f, 0x80, 0x0f, 0xe0, 0xc0, 0x01, 0xf9, 0xff, 0xe0, 0xf0, 
  0x0f, 0x0f, 0x00, 0x0f, 0x80, 0x00, 0x01, 0xf8, 0x7f, 0x80, 0xf0, 0x0f, 0x0f, 0x00, 0x1f, 0x00, 
  0x00, 0x01, 0xf8, 0x3f, 0x00, 0xf0, 0x0f, 0x0f, 0x00, 0x1e, 0x00, 0x00, 0x04, 0x60, 0x0c, 0x80, 
  0xf0, 0x0f, 0x0f, 0x00, 0x1e, 0x00, 0x00, 0x0f, 0x00, 0x01, 0xe0, 0xf0, 0x0f, 0x0f, 0xfe, 0x3e, 
  0x00, 0x00, 0x3f, 0x80, 0x07, 0xf0, 0xf0, 0x0f, 0x0f, 0xfe, 0x3e, 0x0f, 0xe0, 0x7f, 0xc0, 0x07, 
  0xf0, 0xf0, 0x0f, 0x0f, 0xfe, 0x3e, 0x0f, 0xe0, 0x7f, 0xc0, 0x07, 0xf0, 0xf0, 0x0f, 0x0f, 0xfe, 
  0x3e, 0x0f, 0xe0, 0x7f, 0xc0, 0x07, 0xf0, 0xf8, 0x0f, 0x0f, 0x00, 0x3e, 0x01, 0xe0, 0x7f, 0xc0, 
  0x03, 0xf0, 0xf8, 0x0f, 0x0f, 0x00, 0x1e, 0x01, 0xe0, 0x7f, 0xc0, 0x01, 0xe0, 0x78, 0x1f, 0x0f, 
  0x00, 0x1f, 0x01, 0xe0, 0x3f, 0x80, 0x08, 0x80, 0x78, 0x1e, 0x0f, 0x00, 0x1f, 0x81, 0xe0, 0x0e, 
  0x00, 0x1e, 0x00, 0x7c, 0x3e, 0x0f, 0x00, 0x0f, 0xe1, 0xe0, 0x00, 0x1c, 0x7f, 0x00, 0x3f, 0xfc, 
  0x0f, 0x00, 0x07, 0xff, 0xe0, 0x00, 0x3e, 0xff, 0x80, 0x3f, 0xfc, 0x0f, 0x00, 0x03, 0xff, 0xe0, 
  0x00, 0x3e, 0xff, 0x80, 0x0f, 0xf0, 0x0f, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x3e, 0x7f, 0x80, 0x03, 
  0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1c, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
//IMAGEM EXADECIMAL LOGO 'emc', 84x48px
const unsigned char emc [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x03, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 
  0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x38, 0x00, 0x00, 0xff, 
  0x70, 0x00, 0x00, 0x00, 0x3e, 0x01, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0xf0, 
  0x0f, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xc0, 0x00, 0x03, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xe0, 
  0x7f, 0xff, 0xe0, 0x00, 0x0f, 0x81, 0xff, 0x3f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0x00, 0x1e, 
  0x0f, 0xff, 0x3f, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xf0, 0x00, 0x7c, 0x1f, 0xfe, 0x1f, 0xff, 0xff, 
  0xfc, 0xff, 0xff, 0xf0, 0x00, 0xf8, 0x7f, 0xfe, 0x1f, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xe0, 0x01, 
  0xf0, 0xff, 0xfc, 0xcf, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xc0, 0x01, 0xe1, 0xff, 0xf8, 0xc7, 0x80, 
  0xff, 0xfe, 0x3f, 0xff, 0x00, 0x03, 0xe3, 0xff, 0xf9, 0xe0, 0x0f, 0xff, 0xfc, 0x0f, 0xfc, 0x00, 
  0x1f, 0xf3, 0xfc, 0xf3, 0xe0, 0xff, 0xff, 0xf8, 0x0f, 0xf0, 0x00, 0x3f, 0xfb, 0xff, 0x63, 0xff, 
  0xff, 0xff, 0xf0, 0x1f, 0xe0, 0x00, 0x7f, 0xfb, 0xff, 0x87, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xc0, 
  0x00, 0x7f, 0xf9, 0xff, 0xcf, 0xff, 0xff, 0xff, 0x80, 0x7f, 0x80, 0x00, 0x7f, 0xf1, 0xff, 0xff, 
  0xff, 0xff, 0xfe, 0x00, 0xff, 0x00, 0x00, 0x3f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xfc, 
  0x00, 0x00, 0x01, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xe0, 0x07, 0xf8, 0x00, 0x00, 0x00, 0xf0, 0x0f, 
  0xff, 0xff, 0xff, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x3c, 0x00, 0xff, 0xff, 0xe0, 0x00, 0x7f, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x07, 0xf0, 0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 
  0x80, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xfe, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xf8, 0xff, 
  0xc0, 0x00, 0xff, 0xc3, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xf8, 0xff, 0xe0, 0x01, 0xff, 0xc7, 0xff, 
  0xff, 0xf0, 0x7c, 0x00, 0x00, 0xf9, 0xf0, 0x03, 0xe7, 0xc7, 0xc0, 0x01, 0xe0, 0x7c, 0x00, 0x00, 
  0xf8, 0xf8, 0x07, 0xc7, 0xc7, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0xf0, 0xf8, 0x7c, 0x0f, 0x87, 0xc7, 
  0xc0, 0x00, 0x00, 0x7f, 0xff, 0xf0, 0xf8, 0x3e, 0x1f, 0x07, 0xc7, 0xc0, 0x00, 0x00, 0x7c, 0x00, 
  0x00, 0xf8, 0x1f, 0x3e, 0x07, 0xc7, 0xc0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0xf8, 0x0f, 0xfc, 0x07, 
  0xc7, 0xc0, 0x00, 0x00, 0x7c, 0x00, 0x00, 0xf8, 0x07, 0xf8, 0x07, 0xc7, 0xc0, 0x01, 0xf0, 0x7f, 
  0xff, 0xf8, 0xf8, 0x03, 0xf0, 0x07, 0xc7, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xf8, 0xf8, 0x01, 0xe0, 
  0x07, 0x83, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
//--------------INICIO DO SETUP------------------------------------------------------------------------------

void setup()   {
  
  pinMode(baixo, INPUT_PULLUP); //
  pinMode(ok, INPUT_PULLUP);    // DEFININDO OS BOTOES NAS PORTAS 0,1 E 2.
  pinMode(cima, INPUT_PULLUP);  //
  pinMode(ledtela, OUTPUT);         //ACIONA O LED DA TELA
  pinMode(vibracall, OUTPUT);   //ACIONA O VIBRACALL
  pinMode(som, OUTPUT);
  pinMode(ledvermelho, OUTPUT);
  pinMode(ledverde, OUTPUT);
  
  digitalWrite(ledtela,LOW);        //LIGA O LED DO LCD AO INICIAR O SISTEMA
  digitalWrite(ledvermelho,LOW);    //LIGA O LED VERMELHO AO INICIAR O SISTEMA
  digitalWrite(ledverde,LOW);       //LIGA O LED VERDE AO INICIAR O SISTEMA
  
  trinca.attach(servo);         //LIGA O SERVO AO PINO 11
  trinca.write(aberto);//POSICIONA A TRANCA NA POSICAO ABERTA: 0 GRAU
  // ACIONA O VIBRACALL POR 2s <=======================================================*******POR FAZER*******============================================


  
  Serial.begin(9600);

  //Inicia o Display
  display.begin();

  // limpa o buffer.
  display.clearDisplay();

  // ajusta o contraste para o valor inicial de 60.
  display.setContrast(60);

  //--------------APRESENTAÇOES------------------------------------------------------------------------------

  //APRESENTAÇAO DO "LOGO DA UFG"
  display.drawBitmap(0, 0,  ufg, 84, 48, BLACK);
  display.display();
  delay(tempologo);
  display.clearDisplay();//FIM DO LOGO UFG

  display.display();//INTERVALO SEM NENHUMA IMAGEM
  delay(tempodeintervalologo);

  //APRESENTAÇAO DO "LOGO DA EMC"
  display.drawBitmap(0, 0,  emc, 84, 48, BLACK);
  display.display();
  delay(tempologo);
  display.clearDisplay();
  display.display();
  delay(tempodeintervalologo);//FIM DO LOGO EMC
  
  //APRESENTAÇAO DA PRIMEIRA PARTE DO "TRANCA FONE"
  display.setTextSize(1);
  display.setTextColor(BLACK);
  display.setCursor(0,8);
  display.println("    TRANCA    ");
  display.display();
  delay(500);
  display.setCursor(0,16);
  display.println("     FONE     ");
  display.display();
  delay(500);
  
  for(z=0;z<=2;z++){
  display.clearDisplay();
  display.setCursor(0,8);
  display.println("    TRANCA    ");
  display.display();
  display.setCursor(0,16);
  display.println("     FONE     ");
  display.display();
  delay(500);
  display.clearDisplay();
  display.setCursor(0,8);
  display.println(" |||TRANCA||| ");
  display.display();
  display.setCursor(0,16);
  display.println(" ||| FONE ||| ");
  display.display();
  delay(500);
  }
  delay(tempodeintervalologo);//INTERVALO ANTES DA FRASE DE EFEITO

  //APRESENTAÇAO DA FRASE DE EFEITO
  display.setTextSize(1);
  display.setTextColor(BLACK);
  display.setCursor(9,32);
  display.println("De um tempo");
  display.setCursor(9,40);
  display.println("a si mesmo!");
  display.display();
  delay(2*tempologo);
  display.clearDisplay();//FIM DAS APRESENTAÇOES
  
  digitalWrite(ledvermelho,HIGH);    //LIGA O LED VERMELHO SE DESLIGA E SOMENTE O VERDE PERMANECE ACESO, DEMONSTRANDO QUE A PORTA ESTA ABERTA
}
  

//------------------FIM DO SETUP E INICIO DO LOOP------------------------------------------------------------------------------


void loop() {

 }//CHAVE DO LOOP
